(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[3897],{24294:function(e,t,r){"use strict";r.r(t),r.d(t,{assets:function(){return l},contentTitle:function(){return u},default:function(){return f},frontMatter:function(){return c},metadata:function(){return d},toc:function(){return p}});var i=r(87462),a=r(63366),n=(r(67294),r(3905)),s=r(93456),o=["components"],c={id:"architecture_api",sidebar_position:2,title:"API Architecture"},u="Api Architecture",d={unversionedId:"architecture/architecture_api",id:"architecture/architecture_api",title:"API Architecture",description:"We are using a three layer architecture separating the api into the layers app, core and infrastructure.",source:"@site/docs/architecture/api.md",sourceDirName:"architecture",slug:"/architecture/architecture_api",permalink:"/docs/architecture/architecture_api",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{id:"architecture_api",sidebar_position:2,title:"API Architecture"},sidebar:"tutorialSidebar",previous:{title:"Basics",permalink:"/docs/architecture/basics"},next:{title:"Basics",permalink:"/docs/infrastructure/basics"}},l={},p=[{value:"Layers",id:"layers",level:2},{value:"app",id:"app",level:3},{value:"core",id:"core",level:3},{value:"infrastructure",id:"infrastructure",level:3},{value:"Project folder structure",id:"project-folder-structure",level:2}],h={toc:p};function f(e){var t=e.components,r=(0,a.Z)(e,o);return(0,n.kt)("wrapper",(0,i.Z)({},h,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"api-architecture"},"Api Architecture"),(0,n.kt)("p",null,"We are using a three layer architecture separating the api into the layers ",(0,n.kt)("inlineCode",{parentName:"p"},"app"),", ",(0,n.kt)("inlineCode",{parentName:"p"},"core")," and ",(0,n.kt)("inlineCode",{parentName:"p"},"infrastructure"),".\nEach of the layers consists of a NestJs module which is divided into further sub-folders. This way one can get a\ngood overview of the application quickly. This division also allows us to easily test, extend and maintain the application."),(0,n.kt)("h2",{id:"layers"},"Layers"),(0,n.kt)(s.Mermaid,{config:{},chart:"graph TD;\n    app--\x3ecore;\n    core--\x3einfrastructure;\n    infrastructure--\x3eid1[(Database)]",mdxType:"Mermaid"}),(0,n.kt)("h3",{id:"app"},"app"),(0,n.kt)("p",null,"This layer is the single point of communication with the user and contains the access points of the api.\nThe controllers and the auth configurations needed to guard the communication reside here.\nAs we are using the passport libraries the auth folder also contains the strategies and guards we need to implement the security.\nThe controllers are simple and don't contain any business logic. They just receive the data and immediately propagate it to the core services."),(0,n.kt)("h3",{id:"core"},"core"),(0,n.kt)("p",null,"This is the business/domain layer which contains our business logic. This layer is referenced by the\napp layer and provides and manipulates the data according to our business rules. We also specify our\ninterfaces here which allows us to be able to easily test the application. Services are used to\nestablish communication between the app and core layers."),(0,n.kt)("h3",{id:"infrastructure"},"infrastructure"),(0,n.kt)("p",null,"This layer handles all the work needed to get the data from the database and keep the data up to date with the\ncurrent model changes. The repositories are provided by TypeOrm and are not implemented by us. TypeOrm provides a set of standard\nfunctionalities for CRUD operations in their repositories which are more than enough for what we need and therefore it does not make sense\nto create custom implementations."),(0,n.kt)("h2",{id:"project-folder-structure"},"Project folder structure"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"gipfeli-api/\n\u251c\u2500\u2500 src/\n\u2502   \u251c\u2500\u2500 app/\n\u2502   \u2502   \u251c\u2500\u2500 auth/\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 strategies\n\u2502   \u2502   \u2502   \u2514\u2500\u2500 guards\n\u2502   \u2502   \u2514\u2500\u2500 controllers\n\u2502   \u251c\u2500\u2500 core/\n\u2502   \u2502   \u251c\u2500\u2500 common\n\u2502   \u2502   \u251c\u2500\u2500 dtos\n\u2502   \u2502   \u251c\u2500\u2500 services\n\u2502   \u251c\u2500\u2500 infrastructure/\n\u2502   \u2502   \u251c\u2500\u2500 config\n\u2502   \u2502   \u251c\u2500\u2500 entities\n\u2502   \u2502   \u2514\u2500\u2500 migrations\n\u2502   \u2514\u2500\u2500 main.ts\n\u2514\u2500\u2500 test\n")))}f.isMDXComponent=!0},11748:function(e,t,r){var i={"./locale":89234,"./locale.js":89234};function a(e){var t=n(e);return r(t)}function n(e){if(!r.o(i,e)){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return i[e]}a.keys=function(){return Object.keys(i)},a.resolve=n,e.exports=a,a.id=11748}}]);
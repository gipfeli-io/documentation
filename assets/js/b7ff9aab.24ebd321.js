"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[1766],{4681:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>u,contentTitle:()=>n,default:()=>p,frontMatter:()=>c,metadata:()=>o,toc:()=>d});var a=i(7462),r=(i(7294),i(3905)),s=i(1839);const c={id:"basics",sidebar_position:1,title:"Basics"},n="Architecture Overview",o={unversionedId:"architecture/basics",id:"architecture/basics",title:"Basics",description:"We are using a three tier architecture consisting of a presentation layer (statically-built React Application),",source:"@site/docs/architecture/basics.md",sourceDirName:"architecture",slug:"/architecture/basics",permalink:"/docs/architecture/basics",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{id:"basics",sidebar_position:1,title:"Basics"},sidebar:"tutorialSidebar",previous:{title:"Domain Model",permalink:"/docs/domain/domain-model"},next:{title:"API Architecture",permalink:"/docs/architecture/api-architecture"}},u={},d=[],l={toc:d};function p(e){let{components:t,...i}=e;return(0,r.kt)("wrapper",(0,a.Z)({},l,i,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"architecture-overview"},"Architecture Overview"),(0,r.kt)("p",null,"We are using a three tier architecture consisting of a presentation layer (statically-built React Application),\nbusiness layer (NestJs Application) and a data layer (PostgreSql database) for persistence.\nEach of the layers is hosted on a different Google Service (for details see ",(0,r.kt)("a",{parentName:"p",href:"../infrastructure/basics"},"Infrastructure"),")\nand has it's own update cycle."),(0,r.kt)(s.G,{chart:"graph TD;\n    A(Presentation Layer: Gipfeli Frontend)--\x3eB(Business Layer: Gipfeli Api);\n    B--\x3eC(Data Layer: PostgreSQL);\n    C--\x3eD(PostgreSQL Server);",mdxType:"Mermaid"}))}p.isMDXComponent=!0}}]);
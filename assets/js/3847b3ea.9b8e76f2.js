"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[5581],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>m});var o=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,o,a=function(e,t){if(null==e)return{};var n,o,a={},i=Object.keys(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=o.createContext({}),p=function(e){var t=o.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},d=function(e){var t=p(e.components);return o.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},c=o.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),c=p(n),m=a,f=c["".concat(l,".").concat(m)]||c[m]||u[m]||i;return n?o.createElement(f,r(r({ref:t},d),{},{components:n})):o.createElement(f,r({ref:t},d))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,r=new Array(i);r[0]=c;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,r[1]=s;for(var p=2;p<i;p++)r[p]=n[p];return o.createElement.apply(null,r)}return o.createElement.apply(null,n)}c.displayName="MDXCreateElement"},1959:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>r,default:()=>u,frontMatter:()=>i,metadata:()=>s,toc:()=>p});var o=n(7462),a=(n(7294),n(3905));n(8209);const i={id:"setup",sidebar_position:2,title:"Development Setup"},r=void 0,s={unversionedId:"setup",id:"setup",title:"Development Setup",description:"Currently, there is no dockerized configuration for local development. Instead, you have to clone both",source:"@site/docs/setup.md",sourceDirName:".",slug:"/setup",permalink:"/docs/setup",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{id:"setup",sidebar_position:2,title:"Development Setup"},sidebar:"tutorialSidebar",previous:{title:"Intro",permalink:"/docs/"},next:{title:"Basics",permalink:"/docs/domain/basics"}},l={},p=[{value:"Development Environment Overview",id:"development-environment-overview",level:3},{value:"Prerequisites",id:"prerequisites",level:3},{value:"Database Setup",id:"database-setup",level:3},{value:"Alternative database setup without docker",id:"alternative-database-setup-without-docker",level:4},{value:"Frontend Setup",id:"frontend-setup",level:3},{value:"Api Setup",id:"api-setup",level:3},{value:"Database migrations",id:"database-migrations",level:4},{value:"Filenames",id:"filenames",level:5},{value:"Adding a migration",id:"adding-a-migration",level:5},{value:"Dockerized Environment for Testing",id:"dockerized-environment-for-testing",level:2}],d={toc:p};function u(e){let{components:t,...i}=e;return(0,a.kt)("wrapper",(0,o.Z)({},d,i,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Currently, there is no dockerized configuration for local development. Instead, you have to clone both\nthe ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/gipfeli-io/gipfeli-api"},"gipfeli.io API")," and\nthe ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/gipfeli-io/gipfeli-frontend"},"gipfeli.io frontend")," and run both processes manually. For\nmore information on how to set up the project, please refer to the sections below."),(0,a.kt)("h3",{id:"development-environment-overview"},"Development Environment Overview"),(0,a.kt)("p",null,(0,a.kt)("a",{target:"_blank",href:n(9060).Z},"(enlarge image)"),"\n",(0,a.kt)("img",{alt:"Infrastructure diagram",src:n(9940).Z,width:"3490",height:"2410"})),(0,a.kt)("admonition",{type:"info"},(0,a.kt)("p",{parentName:"admonition"},"Please be aware that you don't have to configure Sentry or SendGrid. The application will also run without adding them.\nAdding a valid bucket (cloud storage) is necessary if you want to upload images or gpx files.")),(0,a.kt)("h3",{id:"prerequisites"},"Prerequisites"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Node >=14.0.0 and NPM >=5.6. Installation with nvm is recommended. Read more here: ",(0,a.kt)("a",{parentName:"li",href:"https://docs.npmjs.com/downloading-and-installing-node-js-and-npm"},"https://docs.npmjs.com/downloading-and-installing-node-js-and-npm")),(0,a.kt)("li",{parentName:"ul"},"Git ",(0,a.kt)("a",{parentName:"li",href:"https://git-scm.com/book/en/v2/Getting-Started-Installing-Git"},"https://git-scm.com/book/en/v2/Getting-Started-Installing-Git")),(0,a.kt)("li",{parentName:"ul"},"An IDE of your choice with which you can develop React and NestJS applications. E.g. WebStorm, IntelliJ"),(0,a.kt)("li",{parentName:"ul"},"Docker Desktop or Docker Engine"),(0,a.kt)("li",{parentName:"ul"},"Postgres if you don't want to use a dockerized database (see ",(0,a.kt)("a",{parentName:"li",href:"#database-setup"},"Database Setup"),")")),(0,a.kt)("p",null,"Set everything up as per installation guide of the respective tool."),(0,a.kt)("h3",{id:"database-setup"},"Database Setup"),(0,a.kt)("p",null,"The easiest way to set up the database is to use the postgres postgis docker image. Do the following steps to configure\nit:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("inlineCode",{parentName:"li"},"docker pull postgis/postgis")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("inlineCode",{parentName:"li"},"docker run -d --name postgis_docker -e POSTGRES_USER=postgres -e POSTGRES_PASSWORD=postgres -e POSTGRES_DB=postgres -p 5432:5432 postgis/postgis"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"-p")," : this maps the internal container port to an external port, so we can connect to the database from outside the container"))),(0,a.kt)("li",{parentName:"ol"},"Feel free to create a new database with any naming you like or use the default database 'postgres'. Make sure to\nupdate the database name in the .env file.")),(0,a.kt)("admonition",{type:"info"},(0,a.kt)("p",{parentName:"admonition"},"Connect to database instance with your favorite db tool (e.g. DBeaver, DataGrip etc.) and use the following config (only\nworking if you executed the docker command as shown above):"),(0,a.kt)("ul",{parentName:"admonition"},(0,a.kt)("li",{parentName:"ul"},"Host: localhost"),(0,a.kt)("li",{parentName:"ul"},"Port: 5432"),(0,a.kt)("li",{parentName:"ul"},"User: postgres"),(0,a.kt)("li",{parentName:"ul"},"Password: postgres"))),(0,a.kt)("h4",{id:"alternative-database-setup-without-docker"},"Alternative database setup without docker"),(0,a.kt)("p",null,"If you do not want to use docker please install postgres on your machine. You can follow the guides on the official\n",(0,a.kt)("a",{parentName:"p",href:"https://www.postgresql.org/"},"PostgreSQL")," page."),(0,a.kt)("p",null,"After setting up postgres locally create a new database (if you do not want to use the standard postgres database) and\ninstall the PostGIS extension with\n",(0,a.kt)("inlineCode",{parentName:"p"},"CREATE EXTENSION postgis;"),". For more information check out the ",(0,a.kt)("a",{parentName:"p",href:"https://postgis.net/"},"PostGIS")," page."),(0,a.kt)("h3",{id:"frontend-setup"},"Frontend Setup"),(0,a.kt)("p",null,"Clone the frontend repository: ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/gipfeli-io/gipfeli-frontend"},"https://github.com/gipfeli-io/gipfeli-frontend"),". Follow the guide in the .readme file of the repository."),(0,a.kt)("admonition",{type:"caution"},(0,a.kt)("p",{parentName:"admonition"},"If you want the frontend port autoconfigured, make sure to start the frontend after the backend is already running.\nThe frontend will then choose its own port (most probably :3001). Otherwise, the frontend will choose the default port (3000) which\nwill interfere with the api port if you use the standard configuration there. You can also manually configure the ports in your ",(0,a.kt)("inlineCode",{parentName:"p"},".env")," file.")),(0,a.kt)("h3",{id:"api-setup"},"Api Setup"),(0,a.kt)("p",null,"Clone the api repository: ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/gipfeli-io/gipfeli-api"},"https://github.com/gipfeli-io/gipfeli-api"),". Follow the guide in the .readme file of the repository."),(0,a.kt)("h4",{id:"database-migrations"},"Database migrations"),(0,a.kt)("p",null,"We are using TypeORM to generate our tables based on specific typescript objects in the api solution. There are some things you have to\nadhere to, to create your own migrations."),(0,a.kt)("admonition",{type:"info"},(0,a.kt)("p",{parentName:"admonition"},"The database connection is configured in file ",(0,a.kt)("inlineCode",{parentName:"p"},"src/config/database.config.ts"),". This configuration is used to connect to the database\nwhen running the application. There is a separate configuration for executing migrations using the CLI as we cannot use the config service provided\nby NestJS for this. You can find the configuration file for the CLI here ",(0,a.kt)("inlineCode",{parentName:"p"},"src/config/orm.config.ts"),".")),(0,a.kt)("h5",{id:"filenames"},"Filenames"),(0,a.kt)("p",null,"You have to use the following pattern for a new entity file: ",(0,a.kt)("inlineCode",{parentName:"p"},"[your-entity-name].entity.ts"),"\n(please also see the general filename rules on our ",(0,a.kt)("a",{parentName:"p",href:"guidelines/conventions"},"Conventions")," page.)\nOnly filenames with this pattern will be used when running typeorm migrations."),(0,a.kt)("h5",{id:"adding-a-migration"},"Adding a migration"),(0,a.kt)("p",null,"Everytime you add a new entity or change a property in an existing one you have to generate a migration file.\nThe migration files reside outside the NestJS application in the root in folder ",(0,a.kt)("inlineCode",{parentName:"p"},"migrations"),". "),(0,a.kt)("p",null,"Use command ",(0,a.kt)("inlineCode",{parentName:"p"},"typeorm:generate [Add a useful filename e.g. AddCountryTable]")," to let TypeOrm generate a new migration file."),(0,a.kt)("admonition",{type:"info"},(0,a.kt)("p",{parentName:"admonition"},"If you want to add a migration but haven't changed any of the entities (you might want to e.g. fix the name of a category already\nexisting in the database) you have to use command ",(0,a.kt)("inlineCode",{parentName:"p"},"typeorm:create [Add a useful filename]"))),(0,a.kt)("p",null,"Please check out the ",(0,a.kt)("inlineCode",{parentName:"p"},"package.json")," file of the api for a complete list of preconfigured typeorm commands."),(0,a.kt)("h2",{id:"dockerized-environment-for-testing"},"Dockerized Environment for Testing"),(0,a.kt)("admonition",{type:"caution"},(0,a.kt)("p",{parentName:"admonition"},"Please be aware that this might not use the most recent\nversion of gipfeli.io as the references on the main branches have to be manually updated.")),(0,a.kt)("p",null,"We provide a repository where you can clone a dockerized environment of gipfeli.io. You cannot develop with this configuration, but you can\ntest the whole application stack locally.\nFor details on how to set it up please refer to the .readme of this repository: ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/gipfeli-io/gipfeli-docker"},"Gipfeli Docker Repository"),"."))}u.isMDXComponent=!0},9060:(e,t,n)=>{n.d(t,{Z:()=>o});const o=n.p+"assets/files/local_env_infrastructure-f66023a46ae85b75272a552a21f429bd.svg"},9940:(e,t,n)=>{n.d(t,{Z:()=>o});const o=n.p+"assets/images/local_env_infrastructure-f66023a46ae85b75272a552a21f429bd.svg"},8209:(e,t,n)=>{n(7294)}}]);
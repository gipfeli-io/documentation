"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[9263],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return m}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),s=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},u=function(e){var t=s(e.components);return r.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,c=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=s(n),m=o,f=d["".concat(c,".").concat(m)]||d[m]||p[m]||i;return n?r.createElement(f,a(a({ref:t},u),{},{components:n})):r.createElement(f,a({ref:t},u))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=d;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:o,a[1]=l;for(var s=2;s<i;s++)a[s]=n[s];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},383:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return c},default:function(){return m},frontMatter:function(){return l},metadata:function(){return s},toc:function(){return p}});var r=n(7462),o=n(3366),i=(n(7294),n(3905)),a=["components"],l={id:"backend-deployment",sidebar_position:3,title:"Backend deployment"},c=void 0,s={unversionedId:"infrastructure/backend-deployment",id:"infrastructure/backend-deployment",title:"Backend deployment",description:"Our backend is built with nest.js and runs its own process to handle incoming API requests.",source:"@site/docs/infrastructure/backend-deployment.md",sourceDirName:"infrastructure",slug:"/infrastructure/backend-deployment",permalink:"/docs/infrastructure/backend-deployment",tags:[],version:"current",sidebarPosition:3,frontMatter:{id:"backend-deployment",sidebar_position:3,title:"Backend deployment"},sidebar:"tutorialSidebar",previous:{title:"Frontend deployment",permalink:"/docs/infrastructure/frontend-deployment"},next:{title:"Documentation deployment",permalink:"/docs/infrastructure/documentation-deployment"}},u={},p=[{value:"Deployment steps",id:"deployment-steps",level:2},{value:"Todo",id:"todo",level:2}],d={toc:p};function m(e){var t=e.components,n=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Our backend is built with ",(0,i.kt)("a",{parentName:"p",href:"https://nestjs.com/"},"nest.js")," and runs its own process to handle incoming API requests."),(0,i.kt)("h2",{id:"deployment-steps"},"Deployment steps"),(0,i.kt)("p",null,"Deployment always happens when a push is sent to main. This triggers\nthe ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/gipfeli-io/gipfeli-api/blob/stage/.github/workflows/deployment.yml"},"GitHub Action")," that performs\nthe following steps:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Establish connection to our Google Cloud account using the official ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/google-github-actions/auth"},"google-github-actions/auth")," step."),(0,i.kt)("li",{parentName:"ol"},"After step 1, we can now use ",(0,i.kt)("inlineCode",{parentName:"li"},"gcloud")," tools. First, we configure the container registry."),(0,i.kt)("li",{parentName:"ol"},"At this point, we build the container image, assigning it a unique name (",(0,i.kt)("inlineCode",{parentName:"li"},"gcr.io/{project_id}/{app_name}:{commit_sha}"),")"),(0,i.kt)("li",{parentName:"ol"},"We push our previously built image to our registry"),(0,i.kt)("li",{parentName:"ol"},"Finally, we deploy our image to our CloudRun service. This automatically deploys our new image, starts its pod and gracefully replaces the old pod.")),(0,i.kt)("h2",{id:"todo"},"Todo"),(0,i.kt)("ul",{className:"contains-task-list"},(0,i.kt)("li",{parentName:"ul",className:"task-list-item"},(0,i.kt)("input",{parentName:"li",type:"checkbox",checked:!1,disabled:!0})," ","Add testing documentation"),(0,i.kt)("li",{parentName:"ul",className:"task-list-item"},(0,i.kt)("input",{parentName:"li",type:"checkbox",checked:!1,disabled:!0})," ","Change link to ",(0,i.kt)("inlineCode",{parentName:"li"},"main")," branch action when deployed to production")))}m.isMDXComponent=!0}}]);
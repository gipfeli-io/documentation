"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[5581],{1959:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>r,default:()=>d,frontMatter:()=>i,metadata:()=>s,toc:()=>p});var n=a(7462),o=(a(7294),a(3905));a(1839);const i={id:"setup",sidebar_position:2,title:"Setup"},r=void 0,s={unversionedId:"setup",id:"setup",title:"Setup",description:"Currently, there is no dockerized configuration for local development. Instead, you have to clone both",source:"@site/docs/setup.md",sourceDirName:".",slug:"/setup",permalink:"/docs/setup",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{id:"setup",sidebar_position:2,title:"Setup"},sidebar:"tutorialSidebar",previous:{title:"Intro",permalink:"/docs/"},next:{title:"Basics",permalink:"/docs/domain/basics"}},l={},p=[{value:"Database Setup",id:"database-setup",level:2},{value:"Alternative database setup without docker",id:"alternative-database-setup-without-docker",level:3},{value:"Generate new migration",id:"generate-new-migration",level:3},{value:"Executing migrations",id:"executing-migrations",level:3}],u={toc:p};function d(e){let{components:t,...a}=e;return(0,o.kt)("wrapper",(0,n.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Currently, there is no dockerized configuration for local development. Instead, you have to clone both\nthe ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/gipfeli-io/gipfeli-api"},"gipfeli.io API")," as well as\nthe ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/gipfeli-io/gipfeli-frontend"},"gipfeli.io frontend")," and run both processes manually. If you want\nto contribute to the documentation, use the ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/gipfeli-io/documentation"},"documentation")," repository. For\nmore information on how to setup the project, please check the corresponding repositories."),(0,o.kt)("admonition",{type:"caution"},(0,o.kt)("p",{parentName:"admonition"},"Note that you have to match the ports you're running such that the frontend finds the backend. This can be configured\nvia the ",(0,o.kt)("inlineCode",{parentName:"p"},".env")," variable, so when you run the backend on another port, this has to be adapted.")),(0,o.kt)("h2",{id:"database-setup"},"Database Setup"),(0,o.kt)("p",null,"TypeORM is configured in class ",(0,o.kt)("inlineCode",{parentName:"p"},"src/infrastructure/config/database-config.ts"),". Entities have to be named like\nthis ",(0,o.kt)("inlineCode",{parentName:"p"},"*.entity.ts"),"\nand will be automatically included in the search for changes when generating a new migration."),(0,o.kt)("p",null,"The easiest way to setup the database is to use the postgres postgis docker image. Do the following steps to configure\nit:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("inlineCode",{parentName:"li"},"docker pull postgis/postgis")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("inlineCode",{parentName:"li"},"docker run -d --name postgis_docker -e POSTGRES_USER=postgres -e POSTGRES_PASSWORD=postgres -e POSTGRES_DB=postgres -p 5432:5432 postgis/postgis"),(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"-p")," : this maps the internal container port to an external port so we can connect to the database from outside of\nthe container"))),(0,o.kt)("li",{parentName:"ol"},"Feel free to create a new database with any naming you like or use the default database 'postgres'. Make sure to\nupdate the database name in the .env file.")),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"Connect to database instance with your favorite db tool (e.g. DBeaver, DataGrip etc.) and use the following config (only\nworking if you executed the docker command as shown above):"),(0,o.kt)("ul",{parentName:"admonition"},(0,o.kt)("li",{parentName:"ul"},"Host: localhost"),(0,o.kt)("li",{parentName:"ul"},"Port: 5432"),(0,o.kt)("li",{parentName:"ul"},"User: postgres"),(0,o.kt)("li",{parentName:"ul"},"Password: postgres"))),(0,o.kt)("h3",{id:"alternative-database-setup-without-docker"},"Alternative database setup without docker"),(0,o.kt)("p",null,"If you do not want to use docker please install postgres on your machine. You can follow the guides on the official\n",(0,o.kt)("a",{parentName:"p",href:"https://www.postgresql.org/"},"PostgreSQL")," page."),(0,o.kt)("p",null,"After setting up postgres locally create a new database (if you do not want to use the standard postgres database) and\ninstall the PostGIS extension with\n",(0,o.kt)("inlineCode",{parentName:"p"},"CREATE EXTENSION postgis;"),". For more information check out the ",(0,o.kt)("a",{parentName:"p",href:"https://postgis.net/"},"PostGIS")," page."),(0,o.kt)("h3",{id:"generate-new-migration"},"Generate new migration"),(0,o.kt)("p",null,"If you add a new entity you have to generate a migration file.\nExecute the command below after adding the new entity. This will generate a new migration file\nin the folder ",(0,o.kt)("inlineCode",{parentName:"p"},"src/infrastructure/migrations"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"$ npm run typeorm\n")),(0,o.kt)("h3",{id:"executing-migrations"},"Executing migrations"),(0,o.kt)("p",null,"Run the command below to execute migrations:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"$ npm run typeorm-migration\n")))}d.isMDXComponent=!0}}]);
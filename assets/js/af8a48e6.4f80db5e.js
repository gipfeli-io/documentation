"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[9516],{3905:function(e,t,r){r.d(t,{Zo:function(){return d},kt:function(){return f}});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=n.createContext({}),c=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},d=function(e){var t=c(e.components);return n.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),u=c(r),f=a,h=u["".concat(l,".").concat(f)]||u[f]||p[f]||i;return r?n.createElement(h,o(o({ref:t},d),{},{components:r})):n.createElement(h,o({ref:t},d))}));function f(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,o=new Array(i);o[0]=u;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,o[1]=s;for(var c=2;c<i;c++)o[c]=r[c];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}u.displayName="MDXCreateElement"},1214:function(e,t,r){r.r(t),r.d(t,{assets:function(){return d},contentTitle:function(){return l},default:function(){return f},frontMatter:function(){return s},metadata:function(){return c},toc:function(){return p}});var n=r(87462),a=r(63366),i=(r(67294),r(3905)),o=["components"],s={id:"offline-support",sidebar_position:5,title:"Offline Support - DRAFT"},l=void 0,c={unversionedId:"design/offline-support",id:"design/offline-support",title:"Offline Support - DRAFT",description:"PWA basics",source:"@site/docs/design/offline-support.md",sourceDirName:"design",slug:"/design/offline-support",permalink:"/docs/design/offline-support",draft:!1,tags:[],version:"current",sidebarPosition:5,frontMatter:{id:"offline-support",sidebar_position:5,title:"Offline Support - DRAFT"},sidebar:"tutorialSidebar",previous:{title:"Wireframes",permalink:"/docs/design/wireframes"},next:{title:"Branching strategy",permalink:"/docs/guidelines/branching-strategy"}},d={},p=[{value:"PWA basics",id:"pwa-basics",level:2},{value:"Static files",id:"static-files",level:2},{value:"Workbox",id:"workbox",level:2},{value:"Dynamic data",id:"dynamic-data",level:2},{value:"Storage",id:"storage",level:3},{value:"Synchronize offline data with database",id:"synchronize-offline-data-with-database",level:2},{value:"Articles used",id:"articles-used",level:2},{value:"Google Workbox",id:"google-workbox",level:3}],u={toc:p};function f(e){var t=e.components,r=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"pwa-basics"},"PWA basics"),(0,i.kt)("h2",{id:"static-files"},"Static files"),(0,i.kt)("h2",{id:"workbox"},"Workbox"),(0,i.kt)("p",null,"We can use workbox to work with the service worker in ReactJS. This is a library provided by Google to help to use the service worker.\nWhen creating a pwa with react-create-app it is pre-installed and pre-configured to precache all items in the manifest.json (ReactJS will inject some additional assets there. So not everything needs\nto be specified manually)."),(0,i.kt)("h2",{id:"dynamic-data"},"Dynamic data"),(0,i.kt)("h3",{id:"storage"},"Storage"),(0,i.kt)("p",null,"The service worker is perfect for caching static data like css files or icons. But for dynamic data we need more control and a way to easily\nand comfortably manipulate data. This is why we use IndexedDb to store our dynamic data when the user is offline. This approach provides us with the possibility to store a lot of\ndata which is indexed and can be queried easily. As IndexedDB is pretty tedious to work with and promise based we are using a wrapper\nto simplify our work. We decided to use ",(0,i.kt)("a",{parentName:"p",href:"https://dexie.org/"},"Dexie.js")," as it can be used with async/await and provides a nice and easy to use wrapper for the IndexedDB api."),(0,i.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"Why not use local storage for storing the data?\nLocal storage is synchronous and therefore blocks the main thread. This does also not work with service workers as they are\nasynchronous."))),(0,i.kt)("h2",{id:"synchronize-offline-data-with-database"},"Synchronize offline data with database"),(0,i.kt)("h2",{id:"articles-used"},"Articles used"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://www.dotnetpro.de/core/mobile/offline-mitgedacht-1659518.html"},"Offline Post with usage of dexie")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Client-side_web_APIs/Client-side_storage#offline_asset_storage"},"Mozilla Client Storage")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://web.dev/storage-for-the-web/"},"web.dev - Storage for the web"))),(0,i.kt)("h3",{id:"google-workbox"},"Google Workbox"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://developer.chrome.com/docs/workbox/caching-strategies-overview/"},"Caching Strategies")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://developer.chrome.com/docs/workbox/modules/workbox-routing/"},"Workbox Routing"))))}f.isMDXComponent=!0}}]);